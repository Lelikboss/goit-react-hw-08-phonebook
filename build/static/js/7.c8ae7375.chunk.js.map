{"version":3,"sources":["views/LoginView.js"],"names":["formItemLayout","labelCol","xs","span","sm","wrapperCol","LoginView","Form","useForm","form","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","target","name","value","console","log","autoComplete","onFinish","e","authOperations","logIn","Item","label","rules","type","message","required","onChange","hasFeedback","Password","className","htmlType"],"mappings":"2QAIMA,EAAiB,CACrBC,SAAU,CACRC,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,IAGVE,WAAY,CACVH,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,MAIG,SAASG,IACtB,MAAeC,IAAKC,UAAbC,EAAP,oBACA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,cAEXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QAEH,OADAE,QAAQC,IAAIX,GACLC,EAASQ,GAClB,IAAK,WAEH,OADAC,QAAQC,IAAIT,GACLC,EAAYM,GACrB,QACE,SASN,OACE,eAAC,IAAD,yBACEG,aAAa,MACbd,KAAMA,GACFT,GAHN,IAIEwB,SAViB,SAAAC,GACnBV,EAASW,IAAeC,MAAM,CAAEhB,MAAOc,EAAEd,MAAOE,SAAUY,EAAEZ,YAC5DD,EAAS,IACTE,EAAY,KAGZ,UAME,cAAC,IAAKc,KAAN,CACET,KAAK,QACLU,MAAM,SACNT,MAAOT,EACPmB,MAAO,CACL,CACEC,KAAM,QACNC,QAAS,kCAEX,CACEC,UAAU,EACVD,QAAS,8BAXf,SAeE,cAAC,IAAD,CAAOE,SAAUjB,MAEnB,cAAC,IAAKW,KAAN,CACET,KAAK,WACLU,MAAM,WACNC,MAAO,CACL,CACEG,UAAU,EACVD,QAAS,gCAGbG,aAAW,EACXf,MAAOP,EAVT,SAYE,cAAC,IAAMuB,SAAP,CAAgBF,SAAUjB,MAE5B,cAAC,IAAKW,KAAN,CAAWC,MAAM,GAAGQ,UAAU,YAA9B,SACE,cAAC,IAAD,CAAQN,KAAK,UAAUO,SAAS,SAAhC","file":"static/js/7.c8ae7375.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport { Form, Input, Button } from 'antd';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 6,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 14,\n    },\n  },\n};\nexport default function LoginView() {\n  const [form] = Form.useForm();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        console.log(email);\n        return setEmail(value);\n      case 'password':\n        console.log(password);\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    dispatch(authOperations.logIn({ email: e.email, password: e.password }));\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <Form\n      autoComplete=\"off\"\n      form={form}\n      {...formItemLayout}\n      onFinish={handleSubmit}\n    >\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        value={email}\n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n        ]}\n      >\n        <Input onChange={handleChange} />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n        hasFeedback\n        value={password}\n      >\n        <Input.Password onChange={handleChange} />\n      </Form.Item>\n      <Form.Item label=\"\" className=\"btn-login\">\n        <Button type=\"primary\" htmlType=\"submit\">\n          Sign in\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n"],"sourceRoot":""}