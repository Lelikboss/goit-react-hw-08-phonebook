{"version":3,"sources":["Components/AppBar/Navigation.js","Components/AppBar/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","App.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/selectors.js","redux/auth/auth-slice.js","redux/phonebook/phonebook-actions.js","services/api-store.js","redux/phonebook/phonebook-operations.js","redux/phonebook/selectors.js","redux/phonebook/phonebook-reducer.js"],"names":["Navigation","to","exact","AppBar","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","dispatch","useDispatch","name","getUserName","className","title","subTitle","type","ghost","onClick","authOperations","logOut","PrivateRoute","children","redirectTo","PublicRoute","restricted","Footer","Layout","ContactsView","lazy","HomeView","RegisterView","LoginView","App","useEffect","fetchCurrentUser","fallback","path","element","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","token","axios","defaults","headers","common","Authorization","register","createAsyncThunk","userReg","a","rejectWithValue","console","log","post","data","message","logIn","userLogIn","_","thunkAPI","state","getState","persistedToken","get","operations","user","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","payload","rejected","isLoading","error","changeFilter","createAction","fetchContactsAsync","addContactAsync","o","deleteContactsAsync","id","delete","baseURL","fetchContact","actualAPI","addContact","cont","deleteContact","contactsOperations","contactsSelectors","getContacts","contactsList","getFilter","contactsFilter","getLoading","createReducer","filter","pending","combineReducers"],"mappings":"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","file":"static/js/main.eb415f3b.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Button, Space } from 'antd';\nconst Navigation = () => (\n  <>\n    <Space>\n      <Button>\n        <NavLink to=\"/\" exact=\"true\">\n          Main\n        </NavLink>\n      </Button>\n      <Button>\n        <NavLink to=\"/contacts\" exact=\"true\">\n          Contacts\n        </NavLink>\n      </Button>\n    </Space>\n  </>\n);\n\nexport default Navigation;\n","import { useSelector, useDispatch } from 'react-redux';\nimport Navigation from './Navigation';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport { PageHeader, Button, Space } from 'antd';\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n  return (\n    <PageHeader\n      className=\"site-page-header\"\n      title=\"Phonebook\"\n      subTitle={\n        isLoggedIn\n          ? `Hello ${name}, this is your personal phonebook`\n          : 'Register or login to use the phone book.'\n      }\n    >\n      <Space>\n        {isLoggedIn ? (\n          <>\n            <Navigation key={1} />\n            <Button\n              type=\"primary\"\n              ghost\n              onClick={() => dispatch(authOperations.logOut())}\n            >\n              Sign out\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button key={3} type=\"primary\">\n              <NavLink to=\"/login\" exact=\"true\">\n                Sign in\n              </NavLink>\n            </Button>\n            <Button key={4} type=\"primary\">\n              <NavLink to=\"/register\" exact=\"true\">\n                Sign up\n              </NavLink>\n            </Button>\n          </>\n        )}\n      </Space>\n    </PageHeader>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth\";\n\nexport default function PrivateRoute({ children, redirectTo }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return isLoggedIn ? children : <Navigate to={redirectTo} />;\n}\n","import { useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth\";\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo,\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return shouldRedirect ? <Navigate to={redirectTo} /> : children;\n}\n","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Routes, Route } from 'react-router-dom';\nimport AppBar from './Components/AppBar/AppBar';\n// import Container from \"./Components/Container\";\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\nimport { authOperations } from './redux/auth';\nimport { Layout, Divider } from 'antd';\nconst { Footer } = Layout;\nconst ContactsView = lazy(() => import('./views/ContactsView'));\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Layout>\n      <AppBar />\n      <Divider />\n      <Suspense fallback=\"Wait...\">\n        <Routes>\n          <Route\n            exact=\"true\"\n            path=\"/\"\n            element={\n              <PublicRoute redirectTo=\"/\">\n                <HomeView />\n              </PublicRoute>\n            }\n          ></Route>\n          <Route\n            exact=\"true\"\n            path=\"/register\"\n            restricted\n            element={\n              <PublicRoute restricted redirectTo=\"/contacts\">\n                <RegisterView />\n              </PublicRoute>\n            }\n          ></Route>\n\n          <Route\n            exact=\"true\"\n            path=\"/login\"\n            element={\n              <PublicRoute restricted redirectTo=\"/\">\n                <LoginView />\n              </PublicRoute>\n            }\n          ></Route>\n          <Route\n            path=\"/contacts\"\n            element={\n              <PrivateRoute redirectTo=\"/login\">\n                <ContactsView />\n              </PrivateRoute>\n            }\n          ></Route>\n        </Routes>\n      </Suspense>\n      <Divider />\n      <Footer>Footer</Footer>\n    </Layout>\n  );\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import { combineReducers } from \"redux\";\n// import { contactsFilter, contactsList } from \"./Phonebook/phonebook-reducer\";\n// import logger from \"redux-logger\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './phonebook';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor} loading={null}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk(\n  'auth/register',\n  async (userReg, { rejectWithValue }) => {\n    console.log(userReg);\n    try {\n      const { data } = await axios.post('users/signup', userReg);\n      token.set(data.token);\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  },\n);\n\nconst logIn = createAsyncThunk(\n  'auth/login',\n  async (userLogIn, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('users/login', userLogIn);\n      token.set(data.token);\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  },\n);\n\nconst logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout');\n      token.unset();\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  },\n);\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (err) {\n      console.log(err.message);\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logIn,\n  logOut,\n  fetchCurrentUser,\n};\n\nexport default operations;\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\nconst getUserName = (state) => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n};\n\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { authOperations } from './index';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.rejected](state, action) {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    },\n\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"contacts/ChangeFilter\");\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nexport async function regUserAsync(o) {\n  const { data } = await axios.post(\"users/signup\", o);\n  return data;\n}\n\nexport async function logInUserAsync() {\n  const { data } = await axios.post(\"users/login\");\n  return data;\n}\n\nexport async function fetchContactsAsync() {\n  const { data } = await axios.get(\"/contacts\");\n  return data;\n}\n\nexport async function addContactAsync(o) {\n  const { data } = await axios.post(\"/contacts\", o);\n  return data;\n}\nexport async function deleteContactsAsync(id) {\n  const { data } = await axios.delete(`/contacts/${id}`);\n  return data;\n}\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as actualAPI from \"../../services/api-store\";\n\n//---------------------------------------------asyncThunk----------------------------------------------//\nconst fetchContact = createAsyncThunk(\n  \"contacts/fetchContactsGlobal\",\n  async () => {\n    const contacts = await actualAPI.fetchContactsAsync();\n    return contacts;\n  }\n);\n\nconst addContact = createAsyncThunk(\"contacts/сontactsGlobal\", async (cont) => {\n  const contacts = await actualAPI.addContactAsync(cont);\n  return contacts;\n});\n\nconst deleteContact = createAsyncThunk(\n  \"contacts/deleteContactGlobal\",\n  async (id) => {\n    await actualAPI.deleteContactsAsync(id);\n    return id;\n  }\n);\n\nconst contactsOperations = {\n  deleteContact,\n  fetchContact,\n  addContact,\n};\n\nexport default contactsOperations;\n","const getContacts = (state) => state.contacts.contactsList;\nconst getFilter = (state) => state.contacts.contactsFilter;\nconst getLoading = (state) => state.contacts.loading;\n\nconst contactsSelectors = {\n  getContacts,\n  getFilter,\n  getLoading,\n};\n\nexport default contactsSelectors;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./phonebook-actions\";\nimport contactsOperations from \"./phonebook-operations\";\n\nconst contactsList = createReducer([], {\n  [contactsOperations.fetchContact.fulfilled]: (_, { payload }) => payload,\n  [contactsOperations.addContact.fulfilled]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [contactsOperations.deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [contactsOperations.fetchContact.pending]: () => true,\n  [contactsOperations.fetchContact.fulfilled]: () => false,\n  [contactsOperations.fetchContact.rejected]: () => false,\n  [contactsOperations.addContact.pending]: () => true,\n  [contactsOperations.addContact.fulfilled]: () => false,\n  [contactsOperations.addContact.rejected]: () => false,\n  [contactsOperations.deleteContact.pending]: () => true,\n  [contactsOperations.deleteContact.fulfilled]: () => false,\n  [contactsOperations.deleteContact.rejected]: () => false,\n});\n\nconst contactsFilter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contactsFilter,\n  loading,\n  contactsList,\n});\n"],"sourceRoot":""}