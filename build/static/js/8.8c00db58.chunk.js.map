{"version":3,"sources":["views/RegisterView.js"],"names":["RegisterView","useState","setName","email","setMail","password","setPassword","Form","useForm","form","dispatch","useDispatch","handleChange","target","name","value","autoComplete","labelCol","xs","span","sm","wrapperCol","onFinish","e","authOperations","register","Item","label","rules","required","message","type","onChange","hasFeedback","Password","className","htmlType"],"mappings":"2QAKe,SAASA,IACtB,MAAwBC,mBAAS,IAAjC,mBAAaC,GAAb,WACA,EAAyBD,mBAAS,IAAlC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAgCH,mBAAS,IAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAeC,IAAKC,UAAbC,EAAP,oBACMC,EAAWC,cAmBXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,OACH,OAAOZ,EAAQa,GACjB,IAAK,QACH,OAAOX,EAAQW,GACjB,IAAK,WACH,OAAOT,EAAYS,GACrB,QACE,SAgBN,OACE,eAAC,IAAD,yBACEC,aAAa,MACbP,KAAMA,GA9Ca,CACrBQ,SAAU,CACRC,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,IAGVE,WAAY,CACVH,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,OA8BV,IAIEG,SAlBiB,SAAAC,GACnBb,EACEc,IAAeC,SAAS,CACtBX,KAAMS,EAAET,KACRX,MAAOoB,EAAEpB,MACTE,SAAUkB,EAAElB,YAGhBH,EAAQ,IACRE,EAAQ,IACRE,EAAY,KAIZ,UAME,cAAC,IAAKoB,KAAN,CACEC,MAAM,OACNb,KAAK,OACLc,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAHrC,SAKE,cAAC,IAAD,MAEF,cAAC,IAAKJ,KAAN,CACEZ,KAAK,QACLa,MAAM,SACNZ,MAAOZ,EACPyB,MAAO,CACL,CACEG,KAAM,QACND,QAAS,kCAEX,CACED,UAAU,EACVC,QAAS,8BAXf,SAeE,cAAC,IAAD,CAAOE,SAAUpB,MAEnB,cAAC,IAAKc,KAAN,CACEZ,KAAK,WACLa,MAAM,WACNC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCAGbG,aAAW,EACXlB,MAAOV,EAVT,SAYE,cAAC,IAAM6B,SAAP,CAAgBF,SAAUpB,MAE5B,cAAC,IAAKc,KAAN,CAAWC,MAAM,GAAGQ,UAAU,YAA9B,SACE,cAAC,IAAD,CAAQJ,KAAK,UAAUK,SAAS,SAAhC","file":"static/js/8.8c00db58.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport { Form, Input, Button } from 'antd';\n\nexport default function RegisterView() {\n  const [name, setName] = useState('');\n  const [email, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24,\n      },\n      sm: {\n        span: 6,\n      },\n    },\n    wrapperCol: {\n      xs: {\n        span: 24,\n      },\n      sm: {\n        span: 14,\n      },\n    },\n  };\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setMail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    dispatch(\n      authOperations.register({\n        name: e.name,\n        email: e.email,\n        password: e.password,\n      }),\n    );\n    setName('');\n    setMail('');\n    setPassword('');\n  };\n\n  return (\n    <Form\n      autoComplete=\"off\"\n      form={form}\n      {...formItemLayout}\n      onFinish={handleSubmit}\n    >\n      <Form.Item\n        label=\"name\"\n        name=\"name\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        value={email}\n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n        ]}\n      >\n        <Input onChange={handleChange} />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n        hasFeedback\n        value={password}\n      >\n        <Input.Password onChange={handleChange} />\n      </Form.Item>\n      <Form.Item label=\"\" className=\"btn-login\">\n        <Button type=\"primary\" htmlType=\"submit\">\n          Sign up\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n"],"sourceRoot":""}